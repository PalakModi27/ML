hitter_df = pd.read_csv('/content/Hitters.csv')
hitter_df.isna().sum()

1)PREPROCESSING

hitter_df["Salary"].fillna(value=hitter_df["Salary"].mean(), inplace=True)
hitter_df.isna().sum()

print(hitter_df["League"].unique())
print(hitter_df["NewLeague"].unique())
print(hitter_df["Division"].unique())

from sklearn.preprocessing import LabelEncoder
  
# label_encoder object knows how to understand word labels.
le = LabelEncoder()
  
hitter_df["League"]= le.fit_transform(hitter_df["League"])
hitter_df["NewLeague"]= le.fit_transform(hitter_df["NewLeague"])
hitter_df["Division"]= le.fit_transform(hitter_df["Division"])

2)TRAIN TEST SPLIT

X = hitter_df.drop("Salary", axis=1)
Y = hitter_df.iloc[:,-1]

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)
Y = np.asarray(Y).reshape(-1,1)

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(X_scaled, Y, test_size=0.3, random_state=42)

print("x_train.shape = ", x_train.shape)
print("x_test.shape = ", x_test.shape)
print("y_train.shape = ", y_train.shape)
print("y_test.shape = ", y_test.shape)

3)LINEAR REGRESSION

lr = LinearRegression()

lr.fit(x_train, y_train)
y_pred_lr = lr.predict(x_test)
print(y_pred_lr[0:5])
print("Linear Regression R2_Score = ", r2_score(y_test, y_pred_lr))

4)RIDGE REGRESSION

rdg = Ridge(alpha=0.5748)

rdg.fit(x_train, y_train)
y_pred_rdg = rdg.predict(x_test)
print(y_pred_rdg[0:5])
print("Ridge Regression R2_Score = ", r2_score(y_test, y_pred_rdg))

5)LASSO REGRESSON

lss = Lasso(alpha=0.5748)

lss.fit(x_train, y_train)
y_pred_lss = lss.predict(x_test)
print(y_pred_lss[0:5])
print("Lasso Regression R2_Score = ", r2_score(y_test, y_pred_lss))