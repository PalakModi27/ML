import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split

housing_df = pd.read_csv("/content/drive/MyDrive/Colab Notebooks/Machine Learning/USA_Housing.csv")

1)INPUT - OUPUT AND THEIR SCALING

X = housing_df.iloc[:,0:5]
Y = housing_df['Price']

from sklearn.preprocessing import StandardScaler
mm = StandardScaler()
X_scaled = mm.fit_transform(X)
X_scaled = np.insert(X_scaled, 0, values=1, axis=1)
Y = np.asarray(Y).reshape(-1,1)

2)SPLITTING INTO TRAINING AND TESTING

x_train, x_test, y_train, y_test = train_test_split(X_scaled, Y, test_size=0.3, random_state=42)
print("x_train.shape = ", x_train.shape)
print("x_test.shape = ", x_test.shape)
print("y_train.shape = ", y_train.shape)
print("y_test.shape = ", y_test.shape)

3)CREATE BETA MATRIX

A = x_train.T.dot(x_train)
B = np.linalg.inv(A)
C = B.dot(x_train.T)
beta = C.dot(y_train)
beta

4)PREDICT Y

y_pred = x_test.dot(beta)
y_pred[0:5]

5)CALCULATE ERROR

error = y_test - y_pred
sq_err = np.power(error, 2)
sq_err
sum_sq_err = np.sum(sq_err)
sum_sq_err
mse = sum_sq_err/len(y_pred)
mse
rmse = np.sqrt(mse)
rmse
y_mean = np.mean(y_test)
total_variance = np.sum((y_test-y_mean)**2)
print(1-sum_sq_err/total_variance)